1) Дизайн-система — это набор ценностей бренда, инструментов и компонентов, который упрощает создание, тестирование, визуальное и техническое обновление продуктов, а также обеспечивает единообразие их интерфейсов.

2) Давайте разберемся из чего состоит дизайн система. (Схема слайд 3)

3,4) Что такое ui-kit? UI kit — это готовый набор графических элементов

5,6) Что такое шаблоны паттернов? Шаблон проектирования или паттерн (англ. design pattern) в разработке программного обеспечения — повторяемая архитектурная конструкция, представляющая собой решение проблемы проектирования в рамках некоторого часто возникающего контекста.

7,8) что такое библиотека компонентов? Реализованные части приложения, согласно паттернам и ui-kit

9) Вернемся к схеме дизайн системы. Дизайн система должна включать в себя все три пункта, иначе это не дизайн система.

10) Зачем она нужна? Очевидным плюсом использования библиотеки является то, что она существенно упрощает поддержание консистентности продуктов и стабильный уровень качества дизайна.

Как понять, что нужна дизайн система?
Итак, если вы наблюдаете одну или несколько ситуаций из списка ниже, стоит задуматься над разработкой дизайн-системы:
 - у компании большой корпоративный сайт со множеством сервисов и продуктов;
 - у вас есть UI-кит, но нет единой библиотеки для разработчиков и дизайнеров;
 - у бренда нет единого визуального языка.

Что делать?
    - проведите инвентеризацию ваших проектов. Вам нужно доказать, что дизайн системи облегчит вашу, а гланое не только вашу жизнь. Так вы привлечете больше людей и сообщников.
    - заручитесь поддержкой от вашего руководства и команды. Серьзно, ребята, без команды вы ничто, вы ничего не сможете сделать. Если вас не поддерживает ваша команда, можете смело выбросить это идею из своей головы.
    - создайте команду. Чаще всего это дизайнер и фронтендер. По началу их может быть много, в конечном итоге останется один фронт и один дизайнер. Выбирайте людей, которым это под силу. Стажеры тут вряд ли могут помочь.
    - установите правила и принципы вашей дизайн системы; Перед первым спринтом соберите команду и обсудите наиболее важные решения, которые должны быть приняты в рамках запуска системы проектирования. После нахождения решения каждой проблемы убедитесь, что вся компания понимает, где вы находитесь и что вы делаете.
    - It's design time. Just wait. Отдайте работу дизайнерам. Пусть подумывают что войдет в дизайн систему, подготовит шрифты, скейлы, кнопочки ect. Не забудьте про иконочки
    - Go! Создаем первые компоненты
    - Переводим корпоративные сайты на дизайн систему. Не одним махом! Будьте терпеливы, подходите к работе итеративно. Новые проекты собираются сразу с использованием дизайн системы.

    И ВОТ ВЫ НА КОНЕ!

 Чтобы после запуска дизайн-система не развалилась, а успешно переживала все необходимые обновления, нужна команда дизайнеров и разработчиков. Если имеющийся набор правил не годится для задачи, его надо переосмыслить, сломать, пересобрать и внедрить заново — под это и нужна команда.

Как выбрать дизайн систему:
	Polaris рекоммендует перед началомм работы собрать список фич/проблем, которые есть у заказкчика/пользователя. Проверить по чек-листу, все ли соответствует ожиданиям. Сделать черновой набросок с использованием возможностей Polaris, проверитьне возникает ли сложностей.

	Явление вызывает интерес у дизайн-сообщества: появляются сайты-агрегаторы с лучшими примерами дизайн-систем. Самые известные из зарубежных — styleguides.io и designerlynx.co.

	Самые известные российские дизайн системы http://designsystemsclub.ru/ (агрегатор от Mail.ru Group)

Плюсы:
	Многие проблемы решены за вас
	Меньше тратишь времени на верстку.
	Ускоряется процесс сборки.
	Повышается качество выпускаемых продуктов.Число рутинных операций меньше, стандартизации больше. Все однотипное (в теории)
	Интеграция при хорошем использовании дизайн системы так же не занимает много времени. Все предусмотрено
	Если предполагается не один проект подобного плана, то вообще идеально, так как во временем появятся эксперты как в дизайне, так и на фронте.
	Достаточно большое community, основные проблемы решены/пофикшены/заведены баги
	Частые релизы. Релизы, с ворнингами, если что-то критичное изменилось/планируют изменить

Минусы:
	Нужно время на то, чтобы разобраться в дизайн система ВСЕМ! Много ресурсов и разных компонент, что тяжело для усваивания за короткий срок.
	Есть некие специфические задачи, которые неприятно впихивать в реализацию Polaris (как пример - кликабельная строка таблицы, кнопки в футере на странице редактирования)
	Каждый новый человек на проекте - это боль (если его сразу бросать в бой) Больше тратишь врмени на верстку по началу.
	"В этой дизайн системе так сделать нельзя (можно но больно)"

	Из негативных последствий — если воспринимать дизайн-систему как «не обсуждается, это приказ!», есть вероятность скатиться в перерисовывание одних и тех же шаблонов. Поэтому относиться к продукту всё равно нужно творчески, идея первичнее любого метода. Ну и дизайн-система — это всё-таки не стальной негнущийся рельс, а живой организм, который постоянно усложняется и дополняется.
	Разные версии либы могут серьезно отличаться. Дизайн система - это монстр, который хочет выполнять все, и даже варить вам кофе. Но иногда разработчики понимают, что какая-то фича "занимает слишком много места" и ее следует вынести в отдельную либу.

Что делать?
	Если вы столкнулись с проблемами в использовании дизайн системы: поресечить примеры дизайн-системы. Они есть, та сама команда разработки заботится о вас и обязательно приведет пример решения всех стандартных проблем. Нужно лишь выбрать нужный подход, предоставляемый дизайн системой. Polaris в самом конце описывает чек-лист, как бороться с "нестандартностью" ваших проблем. Чаще всего нужно лишь зайти с другой стороны и переделать дизайн. Сходить на GitHub и поресечить проблему там. Если нет решения и зайти с другой стороны не получается, то нужно завести issue, возможно это крутое решение и в новыйх версиях разработчики добавят фичу в релиз. Помним, что дизайн система, как организм, она должна развиваться!
	Если продукт "необычный" и требует нестандартных решений, то лучше использовать не дизайн систему, а UI-kit. Важно понимать в чем различие. UI-kit набор правил дизайнера, без технической реализации. Сохраняем единый стиль, не ограничивая при этом фронтенд-разработчика в реализации.

Заключение:
	Правильное использование дизайн-системы позволяет сфокусироваться на развитии. С ней легко вносить малозаметные, но важные улучшения и при этом не изобретать велосипед каждый раз. (с) vc.ru
